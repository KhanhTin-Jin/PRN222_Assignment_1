@model IEnumerable<KhanhTin.BusinessLogic.DTOs.NewsArticleDto>
@{
    ViewData["Title"] = "News Articles";
    Layout = "~/Views/Shared/_Layout.cshtml"; // hoặc Layout mặc định của bạn
}

<!-- Cyberpunk + Glassmorphism Style -->
<style>
    body {
        background: linear-gradient(to bottom right, #1a1a2e, #16213e);
        font-family: 'Poppins', sans-serif;
        color: #ffffff;
    }

    .page-title {
        font-size: 2.5rem;
        font-weight: 600;
        color: #00b7eb;
        text-shadow: 0 0 10px #00b7eb;
    }

    .neon-btn {
        background-color: transparent;
        border: 2px solid #00b7eb;
        color: #00b7eb;
        padding: 0.5rem 1rem;
        border-radius: 12px;
        transition: 0.3s;
    }

        .neon-btn:hover {
            background-color: #00b7eb;
            color: #000;
            transform: scale(1.05);
        }

    .glass-card {
        background: rgba(255, 255, 255, 0.05);
        border-radius: 20px;
        border: 1px solid rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        -webkit-backdrop-filter: blur(10px);
        box-shadow: 0 0 20px rgba(0, 183, 235, 0.15);
    }

    .glass-input {
        background: rgba(255, 255, 255, 0.05);
        border: 1px solid rgba(255, 255, 255, 0.2);
        color: #fff;
        backdrop-filter: blur(10px);
        -webkit-backdrop-filter: blur(10px);
    }

        .glass-input::placeholder {
            color: #aaa;
        }

    .btn-glow {
        background: #00b7eb;
        border: none;
        color: #000;
        font-weight: bold;
        border-radius: 12px;
        box-shadow: 0 0 15px #00b7eb;
        transition: all 0.3s ease-in-out;
    }

        .btn-glow:hover {
            transform: scale(1.05);
            box-shadow: 0 0 25px #00e0ff;
        }

    .badge-active {
        background-color: #00ff88;
        color: #000;
        font-weight: bold;
        border-radius: 8px;
    }

    .badge-inactive {
        background-color: gray;
        color: #fff;
        font-weight: bold;
        border-radius: 8px;
    }

    .action-btn {
        background: transparent;
        border: 1px solid transparent;
        padding: 6px 10px;
        margin: 0 2px;
        color: #ccc;
        border-radius: 10px;
        transition: 0.3s;
    }

        .action-btn.view {
            border-color: #00b7eb;
        }

        .action-btn.edit {
            border-color: #3ca9f0;
        }

        .action-btn.delete {
            border-color: #ff4f81;
        }

        .action-btn:hover {
            transform: scale(1.1);
            box-shadow: 0 0 8px currentColor;
            color: #fff;
        }

    table thead tr {
        color: #00b7eb;
    }

    .form-control, .form-select {
        color: #fff;
    }
</style>

<!-- Google Font -->
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;500;700&display=swap" rel="stylesheet" />

<div class="page-container text-white">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="page-title">News Articles</h1>
        <a asp-action="Create" class="btn neon-btn">
            <i class="bi bi-plus-circle me-2"></i> Create New Article
        </a>
    </div>

    <!-- Filter Card -->
    <div class="glass-card p-4 mb-5">
        <form asp-action="Search" method="get" class="row g-3">
            <div class="col-md-4">
                <input type="text" name="searchTerm" class="form-control glass-input" placeholder="Search by title, headline, or content" />
            </div>
            <div class="col-md-3">
                <select name="categoryId" class="form-select glass-input">
                    <option value="">All Categories</option>
                    @foreach (var category in ViewBag.Categories ?? new List<SelectListItem>())
                    {
                        <option value="@category.Value">@category.Text</option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <select name="status" class="form-select glass-input">
                    <option value="">All Status</option>
                    <option value="1">Active</option>
                    <option value="0">Inactive</option>
                </select>
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-glow w-100">Search</button>
            </div>
        </form>
    </div>

    <!-- No Articles -->
    @if (!Model.Any())
    {
        <div class="alert alert-info glass-card text-white">
            No news articles found. Click the "Create New Article" button to add one.
        </div>
    }
    else
    {
        <!-- Table Card -->
        <div class="glass-card table-responsive p-3">
            <table class="table table-dark table-hover align-middle">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Category</th>
                        <th>Created By</th>
                        <th>Created Date</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.NewsTitle</td>
                            <td>@item.CategoryName</td>
                            <td>@item.CreatedByName</td>
                            <td>@item.CreatedDate.ToString("dd/MM/yyyy")</td>
                            <td>
                                <span class="badge @(item.NewsStatus == 1 ? "badge-active" : "badge-inactive")">
                                    @(item.NewsStatus == 1 ? "Active" : "Inactive")
                                </span>
                            </td>
                            <td>
                                <div class="btn-group" role="group">
                                    <a asp-action="Details" asp-route-id="@item.NewsArticleID" class="action-btn view">
                                        <i class="bi bi-eye"></i>
                                    </a>
                                    <a asp-action="Edit" asp-route-id="@item.NewsArticleID" class="action-btn edit">
                                        <i class="bi bi-pencil"></i>
                                    </a>
                                    <button type="button" class="action-btn delete js-delete-button"
                                            data-id="@item.NewsArticleID"
                                            data-name="@item.NewsTitle"
                                            data-url="@Url.Action("Delete", "News")"
                                            onclick="confirmDelete(@item.NewsArticleID, '@item.NewsTitle', '@Url.Action("Delete", "News")')">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

<partial name="_DeleteConfirmation" />

<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content" style="background: var(--glass-bg); border: 1px solid var(--glass-border); backdrop-filter: blur(10px); -webkit-backdrop-filter: blur(10px);">
            <div class="modal-header" style="border-bottom: 1px solid var(--glass-border);">
                <h5 class="modal-title" id="deleteModalLabel" style="color: var(--glow-cyan); text-shadow: 0 0 7px var(--glow-cyan); font-weight: 600;">
                    <i class="bi bi-trash-fill me-2"></i> Confirm Deletion
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" style="filter: invert(0.7);"></button>
            </div>
            <div class="modal-body" style="color: var(--text-primary);">
                <p>Are you sure you want to delete the article "<span id="itemNameToDelete" style="color: var(--glow-magenta);"></span>"?</p>
                <p style="color: var(--text-secondary); font-size: 0.9rem;">This action cannot be undone.</p>
            </div>
            <div class="modal-footer" style="border-top: 1px solid var(--glass-border);">
                <button type="button" class="btn" data-bs-dismiss="modal" style="background: transparent; border: 1px solid var(--glass-border); color: var(--text-secondary); padding: 0.5rem 1rem; border-radius: 8px; transition: all 0.3s ease;">
                    Cancel
                </button>
                <form id="deleteForm" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="deleteItemId" name="id" />
                    <button type="submit" class="btn" style="background: var(--glow-red); color: #fff; border: none; padding: 0.5rem 1rem; border-radius: 8px; box-shadow: 0 0 8px var(--glow-red); transition: all 0.3s ease;">
                        <i class="bi bi-trash-fill me-2"></i> Delete
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
                document.addEventListener('DOMContentLoaded', function () {
            const deleteModalElement = document.getElementById('deleteConfirmationModal');
            if (deleteModalElement) {
                const deleteModal = new bootstrap.Modal(deleteModalElement);

                // Xử lý sự kiện khi modal bị đóng
                deleteModalElement.addEventListener('hidden.bs.modal', function () {
                    // Đảm bảo lớp .modal-backdrop được xóa
                    document.querySelectorAll('.modal-backdrop').forEach(backdrop => backdrop.remove());
                    // Đặt lại focus cho giao diện
                    document.body.style.overflow = 'auto'; // Bỏ khóa cuộn
                    document.body.classList.remove('modal-open');
                });

                document.querySelectorAll('.js-delete-button').forEach(button => {
                    button.addEventListener('click', function () {
                        const id = this.getAttribute('data-id');
                        const name = this.getAttribute('data-name');
                        const url = this.getAttribute('data-url');

                        if (itemNameToDelete) itemNameToDelete.textContent = name;
                        if (deleteItemId) deleteItemId.value = id;
                        if (deleteForm) deleteForm.setAttribute('action', url);

                        deleteModal.show();
                    });
                });
            }
        });
    </script>
}

                       